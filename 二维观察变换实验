#include <GL/glut.h>

class wcPt2D {
public:
    GLfloat x, y;
};

void init(void) {
    glClearColor(1.0, 1.0, 1.0, 0.0);  // 设置白色背景
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(-100.0, 100.0, -100.0, 100.0);  // 设置2D正交投影
}

void triangle(wcPt2D* verts) {
    glBegin(GL_TRIANGLES);
    for (int k = 0; k < 3; k++)  // 修改为3个顶点，因为三角形只需要3个点
        glVertex2f(verts[k].x, verts[k].y);
    glEnd();
}

void displayFcn(void) {
    wcPt2D verts[3] = { {-50.0,-25.0}, {50.0,-25.0}, {0.0,50.0} };

    glClear(GL_COLOR_BUFFER_BIT);

    // 第一个视口 - 蓝色三角形
    glViewport(0, 0, 300, 300);
    glColor3f(0.0, 0.0, 1.0);
    triangle(verts);

    // 第二个视口 - 红色旋转三角形
    glViewport(300,0 , 200, 300);
    glColor3f(1.0, 0.0, 0.0);

    glMatrixMode(GL_MODELVIEW);
    glRotatef(90.0, 0.0, 0.0, 1.0);//旋转90°
    triangle(verts);
    glFlush();
}

int main(int argc, char** argv) {  // 修正参数名为argc
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 300);
    glutInitWindowPosition(50, 50);
    glutCreateWindow("Triangle Split View");
    init();
    glutDisplayFunc(displayFcn);
    glutMainLoop();
    return 0;
}
